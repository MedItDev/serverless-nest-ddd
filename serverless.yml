# Service name
service: serverless-nest-ddd

# Framework version constraint (semver constraint): '3', '^2.33'
frameworkVersion: '3'

# See https://www.serverless.com/framework/docs/environment-variables
useDotenv: true

plugins:
  - serverless-plugin-warmup
  - serverless-offline
  - serverless-plugin-typescript
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs16.x
  region: 'eu-west-2'
  stage: ${opt:stage, "local"}
  memorySize: 256
  versionFunctions: false

functions:
  ExampleHandler:
    handler: src/infra/handlers/example/index.exampleHandler
    events:
      - http:
          method: get
          cors: true
          path: /example


custom:
  serverlessPluginTypescript:
    tsConfigFileLocation: './tsconfig.build.json'

  serverless-offline:
    lambdaPort: 3200
    httpPort: 4200

  warmup:
    default:
      memorySize: 256
      vpc: false
      events:
#        - schedule: ${ssm:/api/warmup/schedule}
      timeout: 20
      prewarm: true # Run WarmUp immediately after a deployment lambda
      payloadRaw: true # Won't JSON.stringify() the payload, may be necessary for Go/AppSync deployments
#      concurrency: ${ssm:/api/warmup/concurrency}

package:
  individually: true

